overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
# recalculate values to mm
y = y * width_MM / width_PX;
if (x > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
# recalculate values to mm
x = x * width_MM / width_PX;
if (y > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
}
time = c(time, pair[[3]]);
}
dataframe = data.frame(x,y,time, overshoot);
print(dataframe)
plotRow = c(plotRow, list(dataframe))
};
# set ratio according to orientation and length
ratio =0;
if (t1[4] == "vertical"){
if (t1[3] == "short"){
ratio = ratio = 5/3.5;
} else {
ratio = 5/7;
}
} else {
if (t1[3] == "short"){
ratio = ratio = 3.5/5;
} else {
ratio = 7/5;
}
}
ylim = width_MM;
# colors
cols <- c("#1170AA", "#55AD89");
# create plot row
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_path(alpha = 0.5) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_path(alpha = 0.5) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_path(alpha = 0.5) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
#plotlist = list(p1, p2, p3, p4, p5, p6, p7);
plotlist = list(p1, p2, p3);
finallist = c(finallist, plotlist);
}
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 3; # todo 7;
#labellist = c("1", "2", "3", "4", "5", "6", "7");
labellist = c("1", "2", "3");
# adapt nrow to number of rows
plot = ggarrange(plotlist = finallist, ncol = ncol, nrow = nrow(t1), labels= labellist, common.legend = TRUE);
annotate_figure(plot, top = text_grob("variant", color = "black", face = "bold", size = 48))
return(plot)
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
plot = createVariantPlot(subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
return (plot);
war
}
}
plot = orderTasksForPlotting(variant_list_STUDY)
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
createVariantPlot <- function(t1, t2, t3, t4, t5, t6, t7){
finallist = list();
plotlist = list();
# tList = list(t1, t2, t3, t4, t4, t5, t6, t7); TODO
tList = list(t1, t2, t3);
# go through every row of the data frames with the tasks
for (i in 1:nrow(t1)){
plotRow = list();
for (t in tList){
# get associated measurementPairs via rowname
pairs = measurementPairList[[as.integer(rownames(t)[i])]];
x = c();
y = c();
time = c();
overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
# recalculate values to mm
y = y * width_MM / width_PX;
if (x > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
# recalculate values to mm
x = x * width_MM / width_PX;
if (y > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
}
time = c(time, pair[[3]]);
}
dataframe = data.frame(x,y,time, overshoot);
plotRow = c(plotRow, list(dataframe))
};
# set ratio according to orientation and length
ratio =0;
if (t1[4] == "vertical"){
if (t1[3] == "short"){
ratio = ratio = 5/3.5;
} else {
ratio = 5/7;
}
} else {
if (t1[3] == "short"){
ratio = ratio = 3.5/5;
} else {
ratio = 7/5;
}
}
ylim = width_MM;
# colors
cols <- c("#1170AA", "#55AD89");
# create plot row
p1 = ggplot(df = plotRow[[1]]) + geom_point(alpha = 0.5, aes(x=x, y=y, colour = overshoot)) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p2 = ggplot(df = plotRow[[2]]) + geom_point(alpha = 0.5, aes(x=x, y=y, colour = overshoot)) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p3 = ggplot(df = plotRow[[3]]) + geom_point(alpha = 0.5, aes(x=x, y=y, colour = overshoot)) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
#plotlist = list(p1, p2, p3, p4, p5, p6, p7);
plotlist = list(p1, p2, p3);
finallist = c(finallist, plotlist);
}
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 3; # todo 7;
#labellist = c("1", "2", "3", "4", "5", "6", "7");
labellist = c("1", "2", "3");
# adapt nrow to number of rows
plot = ggarrange(plotlist = finallist, ncol = ncol, nrow = nrow(t1), labels= labellist, common.legend = TRUE);
annotate_figure(plot, top = text_grob("variant", color = "black", face = "bold", size = 48))
return(plot)
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
plot = createVariantPlot(subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
return (plot);
war
}
}
plot = orderTasksForPlotting(variant_list_STUDY)
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
warnings()
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
createVariantPlot <- function(t1, t2, t3, t4, t5, t6, t7){
finallist = list();
plotlist = list();
# tList = list(t1, t2, t3, t4, t4, t5, t6, t7); TODO
tList = list(t1, t2, t3);
# go through every row of the data frames with the tasks
for (i in 1:nrow(t1)){
plotRow = list();
for (t in tList){
# get associated measurementPairs via rowname
pairs = measurementPairList[[as.integer(rownames(t)[i])]];
x = c();
y = c();
time = c();
overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
# recalculate values to mm
y = y * width_MM / width_PX;
if (x > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
# recalculate values to mm
x = x * width_MM / width_PX;
if (y > t1[7]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
}
time = c(time, pair[[3]]);
}
dataframe = data.frame(x,y,time, overshoot);
plotRow = c(plotRow, list(dataframe))
};
# set ratio according to orientation and length
ratio =0;
if (t1[4] == "vertical"){
if (t1[3] == "short"){
ratio = ratio = 5/3.5;
} else {
ratio = 5/7;
}
} else {
if (t1[3] == "short"){
ratio = ratio = 3.5/5;
} else {
ratio = 7/5;
}
}
ylim = width_MM;
# colors
cols <- c("#1170AA", "#55AD89");
# create plot row
p1 = ggplot() + geom_point(df = plotRow[[1]], mapping = aes(x=x, y=y, color = overshoot), alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p2 = ggplot() + geom_point(df = plotRow[[2]], mapping = aes(x=x, y=y, color = overshoot), alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
p3 = ggplot() + geom_point(df = plotRow[[3]], mapping = aes(x=x, y=y, color = overshoot), alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = cols);
#plotlist = list(p1, p2, p3, p4, p5, p6, p7);
plotlist = list(p1, p2, p3);
finallist = c(finallist, plotlist);
}
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 3; # todo 7;
#labellist = c("1", "2", "3", "4", "5", "6", "7");
labellist = c("1", "2", "3");
# adapt nrow to number of rows
plot = ggarrange(plotlist = finallist, ncol = ncol, nrow = nrow(t1), labels= labellist, common.legend = TRUE);
annotate_figure(plot, top = text_grob("variant", color = "black", face = "bold", size = 48))
return(plot)
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
plot = createVariantPlot(subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
return (plot);
war
}
}
plot = orderTasksForPlotting(variant_list_STUDY)
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
pllot
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
plot
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
createVariantPlot <- function(t1, t2, t3, t4, t5, t6, t7){
finallist = list();
plotlist = list();
# tList = list(t1, t2, t3, t4, t4, t5, t6, t7); TODO
tList = list(t1, t2, t3);
# go through every row of the data frames with the tasks
for (i in 1:nrow(t1)){
plotRow = list();
for (t in tList){
# get associated measurementPairs via rowname
pairs = measurementPairList[[as.integer(rownames(t)[i])]];
x = c();
y = c();
time = c();
overshoot = c();
# create dataframe for pairs of each variant
for (pair in pairs){
if (t1[4] == "horizontal"){
x = c(x, pair[[1]]);
y = c(y, pair[[2]]);
if (pair[[1]] > t1[7][1]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
} else {
x = c(x, pair[[2]]);
y = c(y, pair[[1]]);
if (pair[[1]] > t1[7][1]){
overshoot = c(overshoot, "TRUE");
} else {
overshoot = c(overshoot, "FALSE");
}
}
time = c(time, pair[[3]]);
# recalculate values to mm
if(t1[4] == "horizontal"){
y = y * width_MM / width_PX;
} else {
x = x * width_MM / width_PX;
}
}
dataframe = data.frame(x,y,time, overshoot);
plotRow = c(plotRow, list(dataframe))
};
# set ratio according to orientation and length
ratio =0;
if (t1[4] == "vertical"){
if (t1[3] == "short"){
ratio = ratio = 5/3.5;
} else {
ratio = 5/7;
}
} else {
if (t1[3] == "short"){
ratio = ratio = 3.5/5;
} else {
ratio = 7/5;
}
}
ylim = width_MM;
# create plot row
p1 = ggplot(plotRow[[1]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = c("#1170AA", "#55AD89"));
p2 = ggplot(plotRow[[2]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = c("#1170AA", "#55AD89"));
p3 = ggplot(plotRow[[3]], aes(x=x, y=y, color = overshoot)) + geom_point(alpha = 0.5) + scale_x_continuous(limits= c(1,7), breaks = seq(1, 8, 1)) + ylim(0,ylim) + theme(aspect.ratio=ratio) + labs(y = "vertical position (mm)", x = "steps")+ scale_color_manual(values = c("#1170AA", "#55AD89"));
#plotlist = list(p1, p2, p3, p4, p5, p6, p7);
plotlist = list(p1, p2, p3);
finallist = c(finallist, plotlist);
}
variant = paste(t1[1,2], t1[1,3], t1[1,4],  sep=" ");
ncol = 3; # todo 7;
#labellist = c("1", "2", "3", "4", "5", "6", "7");
labellist = c("1", "2", "3");
# adapt nrow to number of rows
plot = ggarrange(plotlist = finallist, ncol = ncol, nrow = nrow(t1), labels= labellist, common.legend = TRUE);
annotate_figure(plot, top = text_grob("variant", color = "black", face = "bold", size = 48))
print(plot)
return(plot)
}
orderTasksForPlotting <- function(list){
targets = unique(data_STUDY$Target);
targets = as.integer(targets);
targets = sort(targets);
sequentialTasks = list();
# for every variant
for (variant in list){
subTask1 = subset(variant, variant$Target == 1, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask2 = subset(variant, variant$Target == 2, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask3 = subset(variant, variant$Target == 3, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask4 = subset(variant, variant$Target == 4, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask5 = subset(variant, variant$Target == 5, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask6 = subset(variant, variant$Target == 6, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
subTask7 = subset(variant, variant$Target == 7, select = c("UserId","Feedback", "Length", "Orientation", "Phase", "Input", "Target", "Error", "Completiontime"));
plot = createVariantPlot(subTask1, subTask2, subTask3, subTask4, subTask5, subTask6, subTask7);
return (plot);
war
}
}
plot = orderTasksForPlotting(variant_list_STUDY)
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/IndPrak/DataAnalysis/dataanalysis.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
View(data)
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
View(tidyData)
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
View(tidyData)
source("C:/Users/kathr_/OneDrive/Desktop/HCI Master/2.Semester/WAL/Studie/Datenauswertung/hp_fankultur.R")
